# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# Configuration file for running experiments
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# timeout_each_job : FPGA Task script splits fpga flow into multiple jobs
# Each job execute fpga_flow script on combination of architecture & benchmark
# timeout_each_job is timeout for each job
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

[GENERAL]
run_engine=openfpga_shell
power_analysis = false
spice_output=false
verilog_output=true
timeout_each_job = 20*60
fpga_flow=vpr_blif
#openfpga_shell_template=${PATH:OPENFPGA_PATH}/openfpga_flow/tasks/FPGA22_task/run.openfpga
openfpga_shell_template = /research/ece/lnis/USERS/DARPA_ERI/Tapeout/May2020/release/FROG_v1.0/SCRIPTS/openfpga_script_templates/generate_testbench.openfpga
openfpga_arch_file=${PATH:OPENFPGA_PATH}/openfpga_flow/tasks/FPGA22_task/arch/fpga22_openfpga_arch.xml

[ARCHITECTURES]
arch0=${PATH:OPENFPGA_PATH}/openfpga_flow/tasks/FPGA22_task/arch/fpga22_vpr_arch.xml

[BENCHMARKS]
bench0=${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/decoder_2_4/decoder_2_4.blif

[SYNTHESIS_PARAM]
bench0_top = decoder_2_4
bench0_act = ${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/decoder_2_4/decoder_2_4.act
bench0_verilog = ${PATH:OPENFPGA_PATH}/openfpga_flow/benchmarks/micro_benchmark/decoder_2_4/decoder_2_4.v
#bench0_chan_width = 200

[SCRIPT_PARAM_MIN_ROUTE_CHAN_WIDTH]
# end_flow_with_test=
vpr_fpga_verilog_formal_verification_top_netlist=
